#%NAME% 
#  Specific macros for Lima PerkinElmer detector 
#%CATEGORY% Detection, Ccd

#%LOG%
#

def limaperkinelmersetup(ccdname) '{

  # --- common control init
  _limapar_controlinit(ccdname, 0)

  # --- parameter definition
  _limapar_addconfig(ccdname, "correction_mode",LP_RW|LP_LIST,1)
  _limapar_addconfig(ccdname, "keep_first_image",LP_RW|LP_LIST,1)
  _limapar_addconfig(ccdname, "gain",LP_RW|LP_MOT,1,"long")

  # --- parameter description
  _limapar_addtext(ccdname, "correction_mode", "Correction")
  _limapar_addtext(ccdname, "keep_first_image", "Keep first image")
  _limapar_addtext(ccdname, "gain", "Detector gain")
}'

lima_addlimatype("PerkinElmer", "limaperkinelmersetup", "limaperkinelmermenu")


def limaperkinelmermenu(ccdname) '{
  local items[] parname
  local nl option

  items["correction_mode"] = "NO"
  items["keep_first_image"] = "NO"
  items["gain"] = 0
  option= 1

  while (option) {

    for (parname in items) {
      items[parname]= _limapar_get(ccdname, parname)
    }

    nl= _limamenu_printtitle(ccdname, "Configuration", "config")

    tty_move(0, nl++, "(1) Configuration :")
    _limamenu_printitem(ccdname, "correction_mode", items["correction_mode"], nl++,11)
    _limamenu_printitem(ccdname, "keep_first_image", items["keep_first_image"], nl++,12)
    _limamenu_printitem(ccdname, "gain", items["gain"], nl++,13)
    nl++

    option= getval("\n\n\tOption ---> ", 0)
    printf("\n\n")

    if((option==1) || (option==11))
      _limapar_ask(ccdname, "correction_mode",items["correction_mode"])
    if((option==1) || (option==12))
      _limapar_ask(ccdname, "keep_first_image",items["keep_first_image"])
    if((option==1) || (option==13))
      _limapar_ask(ccdname, "gain",items["gain"])
  }
}'
#%MACROS%
#%IMACROS%
#%TOC%
#%AUTHOR% E.Petitdemange
