#%NAME% 
#  Specific macros for Lima SlsDetector 
#%CATEGORY% Detection, Ccd

#%LOG%
#
#$Revision: $
#

def limaslsdetectorsetup(ccdname) '{

  # --- common control init
  _limapar_controlinit(ccdname, 0)

  # --- parameter definition
  _limapar_addconfig(ccdname, "config_fname", LP_READ, 1)

  _limapar_addconfig(ccdname, "high_voltage", LP_RW, 1)
  _limapar_addconfig(ccdname, "energy_threshold", LP_RW, 1)

  # --- callback macro on parameter set
  _limapar_addconfig_cb(ccdname, "_limaslsdetector_setpar")

  # --- parameter description
  _limapar_addtext(ccdname, "config_fname", "Configuration file name")

  _limapar_addtext(ccdname, "high_voltage", "High Voltage (V)")
  _limapar_addtext(ccdname, "energy_threshold", "Energy Threshold (eV)")
}'

lima_addlimatype("SlsDetector", "limaslsdetectorsetup", "limaslsdetectormenu")

def _limaslsdetector_setpar(ccdname, parname, value) '{
  #_lima_trace ccdname; printf("CB on <%s>\n", parname)
}'

def limaslsdetectormenu(ccdname) '{
  local items[] parname
  local nl option

  items["config_fname"] = ""
  items["high_voltage"] = -1
  items["energy_threshold"] = -2

  option = 1

  while (option) {

    for (parname in items) {
      items[parname]= _limapar_get(ccdname, parname)
    }

    nl = _limamenu_printtitle(ccdname, "Configuration", "config")

    tty_move(0, nl++, "(1) Configuration:")
    _limamenu_printitem(ccdname, "config_fname", items["config_fname"], \
			nl++, 11)
    nl++

    tty_move(0, nl++, "(2) Calibration:")
    _limamenu_printitem(ccdname, "high_voltage", items["high_voltage"], \
			nl++, 21)
    _limamenu_printitem(ccdname, "energy_threshold", items["energy_threshold"],\
 			nl++, 22)
    nl++

    option = getval("\n\n\tOption ---> ", 0)
    printf("\n\n")

    if ((option == 2) || (option == 21))
      _limapar_ask(ccdname, "high_voltage", items["high_voltage"])
    if ((option == 2) || (option == 22))
      _limapar_ask(ccdname, "energy_threshold", items["energy_threshold"])
  }
}'
#%MACROS%
#%IMACROS%
#%TOC%
#%AUTHOR% A. Homs, $Revision: $, $Date: $
